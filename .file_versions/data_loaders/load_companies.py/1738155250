from mage_ai.settings.repo import get_repo_path
from mage_ai.io.config import ConfigFileLoader
from mage_ai.io.s3 import S3
from os import path

if 'data_loader' not in globals():
    from mage_ai.data_preparation.decorators import data_loader
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test


@data_loader
def load_multiple_csv_from_s3_bucket(*args, **kwargs):
    from os import path
    from mage_ai.data_preparation.repo_manager import get_repo_path
    from mage_ai.io.s3 import S3
    from mage_ai.io.config import ConfigFileLoader

    print('=== Début du bloc load_multiple_csv_from_s3_bucket ===')

    config_path = path.join(get_repo_path(), 'io_config.yaml')
    config_profile = 'default'

    bucket_name = 'wildstartech'
    prefix_folder = ''

    s3 = S3.with_config(ConfigFileLoader(config_path, config_profile))
    
    print('=== Test de connexion : listage des buckets ===')
    bucket_list = s3.client.list_buckets()
    print(bucket_list)

    print(f'=== Listage des objets dans le bucket {bucket_name} ===')
    list_response = s3.client.list_objects_v2(
        Bucket=bucket_name,
        Prefix=prefix_folder
    )
    print(list_response)

    print('=== Tentative de chargement CSV ===')
    df = s3.load(
        bucket_name,
        prefix_folder,
        format='csv',
        is_folder=True,
    )
    print('=== DataFrame chargé :', df.shape)
    print(df.head())

    print('=== Fin du bloc load_multiple_csv_from_s3_bucket ===')
    return df


@test
def test_output(output, *args) -> None:
    """
    Template code for testing the output of the block.
    """
    assert output is not None, 'The output is undefined'