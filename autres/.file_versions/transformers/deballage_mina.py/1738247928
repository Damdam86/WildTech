import pandas as pd
import logging
import ast

if 'transformer' not in globals():
    from mage_ai.data_preparation.decorators import transformer
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test

logger = logging.getLogger(__name__)  # Logger pour afficher les logs Mage.ai

@transformer
def debal_mina(df_mina):
    """
    Transformation des donn√©es du DataFrame df_mina en extrayant certaines informations
    depuis les colonnes JSON stock√©es sous forme de cha√Ænes.
    """

    # V√©rification initiale
    if df_mina is None or df_mina.empty:
        print("‚ùå ERREUR : `df_mina` est vide ou None. Arr√™t de la transformation.")
        logger.error("df_mina est vide ou None. Transformation annul√©e.")
        return None  # Mage AI ne pourra pas ex√©cuter `cleaning` si le return est `None`

    print(f"üîç D√©but du traitement `deballage_mina` - Taille initiale : {df_mina.shape}")
    logger.info(f"D√©but du traitement `deballage_mina` - {df_mina.shape}")

    # Fonction pour convertir les colonnes JSON stock√©es sous forme de cha√Ænes
    def to_dict(x):
        if isinstance(x, str):
            try:
                return ast.literal_eval(x)
            except Exception as e:
                print(f"‚ö†Ô∏è ERREUR lors de l'√©valuation de `{x}` : {e}")
                return None
        return x

    # Appliquer la transformation aux colonnes JSON
    df_mina['contact'] = df_mina['contact'].apply(to_dict)
    df_mina['infos'] = df_mina['infos'].apply(to_dict)

    # Extraction des informations cl√©s
    df_mina['Adresse'] = df_mina['contact'].apply(lambda d: d.get('Adresse') if isinstance(d, dict) else None)
    df_mina['Contact'] = df_mina['contact'].apply(lambda d: d.get('Contact') if isinstance(d, dict) else None)
    df_mina['Date de cr√©ation'] = df_mina['infos'].apply(lambda d: d.get('Date de cr√©ation') if isinstance(d, dict) else None)
    df_mina['mots_cles_a'] = df_mina['infos'].apply(lambda d: d.get('Th√©matiques') if isinstance(d, dict) else None)
    df_mina['March√©'] = df_mina['infos'].apply(lambda d: d.get('March√©s') if isinstance(d, dict) else None)
    df_mina["Date d'adh√©sion"] = df_mina['infos'].apply(lambda d: d.get("Date d'adh√©sion") if isinstance(d, dict) else None)
    df_mina["Type d'organisme"] = df_mina['infos'].apply(lambda d: d.get("Type d'organisme") if isinstance(d, dict) else None)

    print(f"‚úÖ Fin du traitement `deballage_mina` - Taille finale : {df_mina.shape}")
    logger.info(f"Fin du traitement `deballage_mina` - {df_mina.shape}")

    return df_mina  # üî• Retour explicite pour que Mage AI puisse passer les donn√©es √† `cleaning`
